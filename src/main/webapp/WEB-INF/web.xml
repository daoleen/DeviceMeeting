<?xml version="1.0" encoding="UTF-8" ?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.0"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
            http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <!-- Spring Security Filter -->
    <!-- Therefore, it is critical for springSecurityFilterChain
        to be declared first and has name as "springSecurityFilterChain",
        to ensure the request is secured prior to any other logic being invoked.
        also be aware that probably you need to intercept forwards, includes, or errors.
    -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

    <!--
        Определение корневого контейнера Spring, разделяемого
        всеми сервлетами и фильтрами
     -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring/context/spring-context.xml</param-value>
    </context-param>
    
    <!-- 
    	Включение защиты содержимого отправляемой формы    
    -->
    <context-param>
    	<param-name>defaultHtmlEscape</param-name>
    	<param-value>true</param-value>
    </context-param>

	<!-- 
		Определение активного профиля:
		- development	: uses db2 database
		- test			: uses h2 database
		- mysql			: uses mysql database
		- production	: uses mysql database
	-->
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>mysql</param-value>
	</context-param>

    <!--
        Фильтры Spring MVC
    -->

    <!-- Используется для указания кодировки в запросе -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- Put your filters here -->
    <filter>
        <filter-name>openSessionInViewFilter</filter-name>
        <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>openSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
        Создание контейнера Spring, разделяемого всеми сервлетами и фильтрами
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--
        Обработка запросов приложения
    -->
    <servlet>
        <servlet-name>appServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- нужна maven-зависимость spring-webmvc -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/spring/context/servlet-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>

        <!-- Для включения загрузки файлов -->
        <multipart-config>
            <max-file-size>5242880</max-file-size>
            <!-- Макс. размер - 5Mb -->
        </multipart-config>
    </servlet>

    <servlet-mapping>
        <servlet-name>appServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>